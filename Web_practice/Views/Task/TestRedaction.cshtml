@model Web_practice.Models.Pages.Task.TestRedactionModel

@{
    ViewData["Title"] = "TestRedaction";
}

<h1>TestRedaction</h1>

<h4>@Model.Test.Title.</h4>
<hr />

<div class="my-panel panel panel-success">
	<div class="panel-heading text-center"><h4>добавить задание</h4></div>
	<div class="panel-body">
		<form asp-action="Task" asp-controller="Task" method="post" enctype="multipart/form-data">
			<div class="validation" asp-validation-summary="ModelOnly" />
			<div class="form-group">
				<label class="field-labels" asp-for="Title">Название:</label>
				<input type="text" asp-for="Title" />
				<span asp-validation-for="Title" class="text-danger" />
			</div>
			<div class="form-group">
				<label class="field-labels" asp-for="Test_path">тест:</label>
				<input type="file" asp-for="Test_path" />
				<span asp-validation-for="Test_path" class="text-danger" />
			</div>
			<div class="form-group">
				<label class="field-labels" asp-for="Reference_path">ожидаемый результат:</label>
				<input type="file" asp-for="Reference_path" />
				<span asp-validation-for="Reference_path" class="text-danger" />
			</div>
			<div class="text-center">
				<button class="btn bg-primary" type="submit">Создать!</button>
			</div>
		</form>
		@if (Model.Messages.Count != 0)
		{
			<h3>Список ошибок:</h3>
			<div class="scroll">
				@foreach (var message in Model.Messages)
				{
					<p class="text-danger">@message</p>
				}
			</div>
		}
	</div>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="TestRedaction">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
