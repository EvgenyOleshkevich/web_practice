@model Web_practice.Models.Pages.Task.AdditionTestModel

@{
    ViewData["Title"] = "AdditionTest";
}

	<h1>AdditionTest</h1>

<hr />

<div class="my-panel panel panel-success">
	<div class="panel-heading text-center"><h4>добавить тест</h4></div>
	<div class="panel-body">
		<form asp-action="AdditionTest" asp-controller="Task" method="post" enctype="multipart/form-data">
			<div class="validation" asp-validation-summary="ModelOnly" />
			<div class="form-group">
				<label class="field-labels" asp-for="Title">Название:</label>
				<input type="text" asp-for="Title" />
				<span asp-validation-for="Title" class="text-danger" />
			</div>
			<div class="form-group">
				<label class="field-labels" asp-for="Test_path">тест:</label>
				<input type="file" asp-for="Test_path" />
				<span asp-validation-for="Test_path" class="text-danger" />
			</div>
			<div class="form-group">
				<label class="field-labels" asp-for="Reference_path">ожидаемый результат:</label>
				<input type="file" asp-for="Reference_path" />
				<span asp-validation-for="Reference_path" class="text-danger" />
			</div>
			<div class="text-center">
				<button class="btn bg-primary" type="submit">
					Создать!
				</button>
			</div>
		</form>
		@if (Model.Errors.Count != 0)
		{
			<h3>Список ошибок:</h3>
			<div class="scroll">
				@foreach (var message in Model.Errors)
				{
					<p class="text-danger">@message</p>
				}
			</div>
		}
	</div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
